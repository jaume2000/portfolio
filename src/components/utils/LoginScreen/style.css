:root {
    --loading_animation_time: 4s;
    --number_of_turns: 2;
    --circle_radius: 30vw;
}

.loading_screen {
    top: 0;
    height: 100vh;
    width: 100vw;
    position: fixed;
    z-index: 11;
    animation: loading_screen var(--loading_animation_time) ease forwards;
}

@keyframes loading_screen {
    0% {

    }
    100% {
        display: none;
    }
}

.loading_animation {
    position: fixed;
    width: max(120vh, 120vw);
    height: max(120vh, 120vw);
    transform: translate(calc((100vw - max(120vh, 120vw)) / 2), calc(((100vh - max(120vh, 120vw)) / 2)) );
    top:0;
    left:0;
    animation: parent_animation var(--loading_animation_time) ease forwards;
}

@keyframes parent_animation {
    0% {

    }
    30% {
        transform: translate(calc((100vw - max(120vh, 120vw)) / 2), calc(((100vh - max(120vh, 120vw)) / 2)))
    }
    87% {
        transform: translate(calc((100vw - max(120vh, 120vw)) / 2), calc(((100vh - max(120vh, 120vw)) / 2)) ) rotate(calc(360deg * var(--number_of_turns) - 30deg));
    }
    99% {
        transform: translate(calc((100vw - max(120vh, 120vw)) / 2), calc(((100vh - max(120vh, 120vw)) / 2)) ) rotate(calc(360deg * var(--number_of_turns) - 30deg));
    }
    100% {
        transform: translate(calc((100vw - max(120vh, 120vw)) / 2), calc(((100vh - max(120vh, 120vw)) / 2)) ) rotate(calc(360deg * var(--number_of_turns) - 30deg));
        display: none;
    }
}

#loading_screen_part1 {
    position: fixed;
    width:100%;
    height: 100%;
    background-image: linear-gradient(to right, var(--main_color2) 50%, transparent 50.1%);
    z-index: 1;
    animation: part1_animation var(--loading_animation_time) ease forwards;
}

@keyframes part1_animation {
    0% {
        
    }
    20% {
        transform: translate(0,0);
    }
    30% {
        transform: translate(-5vw,0);
    }
    87% {
        transform: translate(-15vw,0);
    }
    90% {
        transform: translate(-12vw,0);
    }
    100% {
        transform: translate(-100%,0);
    }
}




#loading_screen_part2 {
    position: fixed;
    width:100%;
    height: 100%;
    background-image: linear-gradient(to right, transparent 50%, var(--main_color1) 50.1%);
    z-index: 1;
    animation: part2_animation var(--loading_animation_time) ease forwards;
}

@keyframes part2_animation {
    0% {
        
    }
    20% {
        transform: translate(0,0);
    }
    30% {
        transform: translate(5vw,0);
    }
    87% {
        transform: translate(15vw,0);
    }
    90% {
        transform: translate(12vw,0);
    }
    100% {
        transform: translate(100%,0);
    }
}



#loading_screen_part3 {
    position: fixed;
    width:100%;
    height: 100%;
    background-color: rgba(255,255,255,1);
    z-index: 0;
    animation: part3_animation var(--loading_animation_time) ease forwards;
    
}

@keyframes part3_animation {
    0%{

    }
    90% {
        background-color: rgba(255,255,255,1);
    }
    100% {
        background-color: transparent;

    }
}




#loading_screen_circle {
    position: absolute;
    top: 0;
    width: var(--circle_radius);
    height: var(--circle_radius);
    transform: translate(calc( (100vw - var(--circle_radius)) / 2), calc( (100vh - var(--circle_radius)) / 2));
    border-radius: 100%;
    background-color: white;
    z-index: 2;
    animation: loading_circle_animation var(--loading_animation_time) ease forwards;
}


@keyframes loading_circle_animation {
    0%{
        transform: translate(calc( (100vw - var(--circle_radius)) / 2), calc( (100vh - var(--circle_radius)) / 2)) scale(0%);
    }
    10% {
        transform: translate(calc( (100vw - var(--circle_radius)) / 2), calc( (100vh - var(--circle_radius)) / 2)) scale(0%);
    }
    20% {
        transform: translate(calc( (100vw - var(--circle_radius)) / 2), calc( (100vh - var(--circle_radius)) / 2)) scale(20%);   
    }
    30% {
        transform: translate(calc( (100vw - var(--circle_radius)) / 2), calc( (100vh - var(--circle_radius)) / 2)) scale(100%);
    }
    87% {
        transform: translate(calc( (100vw - var(--circle_radius)) / 2), calc( (100vh - var(--circle_radius)) / 2)) scale(160%);
    }
    90% {
        transform: translate(calc( (100vw - var(--circle_radius)) / 2), calc( (100vh - var(--circle_radius)) / 2)) scale(70%);
        display: none;
    }
    100% {
        transform: translate(calc( (100vw - var(--circle_radius)) / 2), calc( (100vh - var(--circle_radius)) / 2)) scale(0%);
        display: none;
    }
}